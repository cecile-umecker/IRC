{"ast":null,"code":"import _toConsumableArray from \"/Users/cecileumecker/Desktop/Epitech/Semestre2/StackJS/chat_irc/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/cecileumecker/Desktop/Epitech/Semestre2/StackJS/chat_irc/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cecileumecker/Desktop/Epitech/Semestre2/StackJS/chat_irc/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cecileumecker/Desktop/Epitech/Semestre2/StackJS/chat_irc/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cecileumecker/Desktop/Epitech/Semestre2/StackJS/chat_irc/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cecileumecker/Desktop/Epitech/Semestre2/StackJS/chat_irc/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cecileumecker/Desktop/Epitech/Semestre2/StackJS/chat_irc/client/src/Chat.js\";\nimport React from \"react\";\nimport io from \"socket.io-client\";\nimport emoji from \"./emoji\";\nimport themes from \"./themes\";\n\nvar Chat = /*#__PURE__*/function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this.state = {\n      username: '',\n      message: '',\n      messages: [],\n      writing: '',\n      users: [],\n      channel: [],\n      join: '',\n      numUsers: 0,\n      theme: ''\n    };\n    _this.socket = io('http://localhost:4001/');\n    _this.state.join = localStorage.getItem('join'); ///////////////////////////////////////////////////\n    // I) EVENEMENT SOCKET.IO\n    //////////////////////////////////////////////////\n    //CONNEXION\n\n    _this.socket.on('connection', function () {\n      this.setState({\n        messages: [].concat(_toConsumableArray(this.state.messages), ['data'])\n      });\n    }); //RECEPTION MSG\n\n\n    _this.socket.on('RECEIVE_MESSAGE', function (data) {\n      addMessage(data);\n      document.getElementsByClassName('messages')[0].scrollTo(0, 99999);\n    }); //NOMBRE UTILISATEUR CONNECTES\n\n\n    _this.socket.on('INFOS_CHANNEL', function (nb_co) {\n      addInfos(nb_co);\n    }); //LISTE CHANNEL\n\n\n    _this.socket.on('LIST_CHANNEL', function (channel) {\n      listChannel(channel);\n    }); //CHANGE CHANNEL\n\n\n    _this.socket.on('CHANGE_CHANNEL', function (channel) {\n      localStorage.setItem('join', channel);\n      changeChannel(channel);\n    }); //AJOUT DE CHANNEL\n\n\n    _this.socket.on('ADD_CHANNEL', function (channel) {\n      addChannel(channel);\n    }); //LISTE USERS\n\n\n    _this.socket.on('LIST_USERS', function (users) {\n      listUsers(users);\n    }); //AJOUT USERS\n\n\n    _this.socket.on('ADD_USERS', function (users) {\n      addUsers(users);\n    }); //PENDANT ECRITE\n\n\n    _this.socket.on('SEE_WRITING', function (callback) {\n      if (callback == true) {\n        document.getElementById('writing').style.display = \"block\";\n        seeWriting(\"Quelqu'un écrit la!!\");\n      } else if (callback == false) {\n        document.getElementById('writing').style.display = \"none\";\n        seeWriting(\"\");\n      }\n    }); ///////////////////////////////////////////////////\n    //[FIN] EVENEMENT SOCKET.IO\n    //////////////////////////////////////////////////\n    ///////////////////////////////////////////////////\n    // II) FONCTIONS CRUD\n    //////////////////////////////////////////////////\n\n    /*AJOUT MSG*/\n\n\n    var addMessage = function addMessage(data) {\n      _this.setState({\n        messages: [].concat(_toConsumableArray(_this.state.messages), [data])\n      });\n    };\n    /*AFFICHE NOMBRE UTILISATEUR CONNECTES AU CHANNEL*/\n\n\n    var addInfos = function addInfos(data) {\n      _this.setState({\n        numUsers: data\n      });\n    };\n    /*LISTE CHANNEL*/\n\n\n    var listChannel = function listChannel(data) {\n      _this.setState({\n        channel: data\n      });\n    };\n    /*AJOUT CHANNEL*/\n\n\n    var addChannel = function addChannel(data) {\n      //this.setState({channel: data});\n      _this.setState({\n        channel: [].concat(_toConsumableArray(_this.state.channel), [data])\n      });\n    };\n    /*CHANGER CHANNEL*/\n\n\n    var changeChannel = function changeChannel(channel) {\n      _this.setState({\n        join: channel\n      });\n    };\n    /*LISTE USERS*/\n\n\n    var listUsers = function listUsers(data) {\n      _this.setState({\n        users: data\n      });\n    };\n    /*AJOUT USER*/\n\n\n    var addUsers = function addUsers(data) {\n      _this.setState({\n        users: [].concat(_toConsumableArray(_this.state.users), [data])\n      });\n    };\n    /*Voir quelqu'un écrire*/\n\n\n    var seeWriting = function seeWriting(data) {\n      _this.setState({\n        writing: data\n      });\n    }; ///////////////////////////////////////////////////\n    //[FIN] FONCTIONS CRUD\n    //////////////////////////////////////////////////\n    ///////////////////////////////////////////////////\n    // III) EVENEMENT AU CLICK\n    //////////////////////////////////////////////////\n    // a) CHANGER DE CHANNEL (au click)\n\n\n    _this.changeRoom = function (ev) {\n      var room = ev.target.textContent;\n      room = room.substr(0, room.length);\n\n      _this.setState({\n        messages: []\n      });\n\n      _this.setState({\n        join: room\n      });\n\n      localStorage.setItem('join', room);\n\n      _this.socket.emit('JOIN_CHANNEL', room);\n    }; // b) CONTACTER UN UTILISATEUR (au click)\n\n\n    _this.contactUser = function (ev) {\n      var user = ev.target.textContent;\n      user = user.substr(3, user.length);\n\n      _this.setState({\n        message: [].concat(_toConsumableArray(_this.state.message), [''])\n      });\n\n      _this.setState({\n        message: [].concat(_toConsumableArray(_this.state.message), ['/msg ' + user + ' '])\n      });\n    }; // c) CHANGER DE THEME (au click)\n\n\n    _this.changeTheme = function (ev) {\n      var key = Object.keys(themes);\n      var random_key = Math.floor(Math.random() * (key.length - 1 - 0 + 1)) + 0;\n      var choice = Object.getOwnPropertyNames(themes)[random_key];\n\n      if (_this.state.theme === choice) {\n        _this.changeTheme();\n\n        return;\n      }\n\n      _this.setState({\n        theme: choice\n      });\n\n      var b_color = themes[choice].b_color;\n      var main_color = themes[choice].main_color;\n      var second_color = themes[choice].second_color;\n      var text = themes[choice].text;\n      var btn = themes[choice].btn; // 1) ANIMATION\n      /////////////////////////////\n\n      document.body.style.transition = \"all 0.6s\";\n      document.getElementsByClassName(\"topnav\")[0].style.transition = \"all 2s\";\n      document.getElementsByClassName('active')[0].style.transition = \"all 2s\";\n      document.getElementsByClassName('sidenav')[0].style.transition = \"all 2s\";\n      document.getElementsByClassName('main-title')[0].style.transition = \"all 1.7s\";\n      document.getElementsByClassName('sidenav')[0].style.transition = \"all 1.8s\";\n      document.getElementsByClassName('btn-dark')[0].style.transition = \"all 1.6s\"; // 2) CHANGEMENT DE COULEURS\n      /////////////////////////////\n\n      document.body.style.backgroundColor = b_color;\n      document.getElementsByClassName('topnav')[0].style.backgroundColor = main_color;\n      document.getElementsByClassName('active')[0].style.backgroundColor = second_color;\n      document.getElementsByClassName('sidenav')[0].style.backgroundColor = main_color;\n      document.getElementsByClassName('main-title')[0].style.color = text;\n      document.getElementsByClassName('sidenav')[0].style.color = text;\n      document.getElementsByClassName('btn-dark')[0].style.backgroundColor = btn;\n    }; ///////////////////////////////////////////////////\n    //{FIN] EVENEMENT AU CLICK\n    //////////////////////////////////////////////////\n    ///////////////////////////////////////////////////\n    // IV) COMMANDES && ENVOI DE MESSAGE\n    //////////////////////////////////////////////////\n\n\n    var i = 0;\n\n    _this.sendMessage = function (ev) {\n      ev.preventDefault(); ///////////////////////////////////////////////////\n      // a) COMMANDES\n      ////////////////////////////////////////////////// \n      // 1) CONNEXION\n      //////////////////////////////\n\n      if (_this.state.message.includes('/nick')) {\n        var user = _this.state.message.split(' ');\n\n        var info = {\n          socket_id: _this.socket.id,\n          username: user[1]\n        };\n        var user_profile = [];\n        user_profile.push(info);\n        localStorage.setItem('user', JSON.stringify(info));\n\n        _this.setState({\n          message: ''\n        });\n\n        _this.socket.emit('CHECK_CONN', {\n          user_co: user[1]\n        });\n\n        _this.socket.emit('ADD_USERS', {\n          id: _this.socket.id,\n          username: user[1]\n        });\n      } // 2) ENVOYER UN MSG PRIVE\n      //////////////////////////////\n      else if (_this.state.message.includes('/msg')) {\n          var data = _this.state.message.split(' ');\n\n          var msg = '';\n          /*Reconstruction string à partir du 2eme argument*/\n\n          for (var i = 2; i < data.length; i++) {\n            msg += data[i] + ' ';\n          }\n\n          _this.socket.emit('PRIVATE_MESSAGE', data[1], msg);\n        } // 3) CREER UN CHANNEL\n        //////////////////////////////\n        else if (_this.state.message.includes('/create')) {\n            var data = _this.state.message.split(' ');\n\n            _this.socket.emit('CREATE_CHANNEL', data[1]);\n          } // 4) SUPPRIMER UN CHANNEL\n          //////////////////////////////\n          else if (_this.state.message.includes('/delete')) {\n              var data = _this.state.message.split(' ');\n\n              _this.socket.emit('DELETE_CHANNEL', data[1]);\n            } // 5) REJOINDRE UN CHANNEL\n            //////////////////////////////\n            else if (_this.state.message.includes('/join')) {\n                var data = _this.state.message.split(' '); //this.socket.emit('JOIN_CHANNEL', data[1])\n\n\n                _this.socket.emit('JOIN_CHANNEL', data[1]);\n              } // 6) QUITTER UN CHANNEL\n              //////////////////////////////\n              else if (_this.state.message.includes('/part')) {\n                  localStorage.removeItem('join');\n\n                  _this.setState({\n                    join: ''\n                  });\n\n                  _this.socket.emit('LEAVE_CHANNEL');\n                } // 7) LISTER DES UTILISATEURS\n                //////////////////////////////\n                else if (_this.state.message.includes('/users')) {\n                    var channel = localStorage.getItem('join');\n\n                    _this.socket.emit('GET_USERS', channel);\n                  } // 8) LISTER CHANNELS\n                  //////////////////////////////\n                  else if (_this.state.message.includes('/list')) {\n                      _this.socket.emit('GET_CHANNEL');\n                    } // 9) CLEAR LE CHAT\n                    //////////////////////////////\n                    else if (_this.state.message.includes('/clear')) {\n                        _this.setState({\n                          messages: []\n                        });\n                      } else {\n                        ///////////////////////////////////////////////////\n                        // b) ENVOI DE MESSAGES\n                        ////////////////////////////////////////////////// \n                        if (localStorage.hasOwnProperty('user')) {\n                          /*On vérifie la présence d'émoji*/\n                          for (var input in emoji) {\n                            _this.state.message = _this.state.message.replace(input, emoji[input]);\n                          }\n                          /*On récupere la date actuel*/\n\n\n                          var now = new Date();\n                          var hour = now.getHours();\n                          var minute = now.getMinutes();\n\n                          if (hour.toString().length == 1) {\n                            hour = '0' + hour;\n                          }\n\n                          if (minute.toString().length == 1) {\n                            minute = '0' + minute;\n                          }\n\n                          var date = hour + 'h' + minute;\n                          var socket_id = JSON.parse(localStorage.getItem('user'))['socket_id'];\n                          var username = JSON.parse(localStorage.getItem('user'))['username']; // 1) ENVOI A UN CHANNEL SPECIFIQUE\n                          //////////////////////////////////////////\n\n                          if (localStorage.hasOwnProperty('join')) {\n                            var channel = localStorage.getItem('join');\n\n                            _this.socket.emit('SEND_CHANNEL_MESSAGE', {\n                              socket_id: socket_id,\n                              channel: channel,\n                              image: 'fa fa-user-o',\n                              author: username,\n                              message: _this.state.message,\n                              date: date\n                            }, channel);\n                          } else {\n                            // 2) ENVOI TOUS UTILISATEURS \n                            //////////////////////////////////////////\n                            _this.socket.emit('SEND_MESSAGE', {\n                              socket_id: socket_id,\n                              channel: \"GENERAL\",\n                              image: 'fa fa-user-o',\n                              author: username,\n                              message: _this.state.message,\n                              date: date\n                            });\n                          }\n                        }\n                      }\n\n      _this.setState({\n        message: ''\n      });\n    }; ///////////////////////////////////////////////////\n    //[FIN] COMMANDES && ENVOI DE MESSAGE\n    //////////////////////////////////////////////////\n\n\n    return _this;\n  }\n  /*RESET*/\n\n\n  _createClass(Chat, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      localStorage.removeItem('join');\n      localStorage.removeItem('users');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.changeTheme();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      /*ICONE QUI APPARAIT PENDANT L'ECRITURE*/\n      if (document.getElementById('m').value.length > 2) {\n        document.getElementById('writing').style.display = \"block\";\n      } else {\n        document.getElementById('writing').style.display = \"none\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"topnav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        class: \"active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 17\n        }\n      }, \"#\", this.state.join)), /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 20\n        }\n      }), \" \", this.state.numUsers)), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"sidenav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        class: \"big-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        class: \"main-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 43\n        }\n      }, \"My IRC\")), /*#__PURE__*/React.createElement(\"img\", {\n        class: \"icon-title\",\n        src: \"https://cdn1.iconfinder.com/data/icons/communication-social-media-set-3/512/15-512.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"a\", {\n        class: \"channel-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 42\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-hashtag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 50\n        }\n      }), \"Cha\\xEEnes\")), this.state.channel.map(function (chat) {\n        return /*#__PURE__*/React.createElement(\"a\", {\n          class: \"btn btn-outline-danger\",\n          href: \"#\",\n          onClick: _this2.changeRoom,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-hashtag\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 95\n          }\n        }), chat.name);\n      }), /*#__PURE__*/React.createElement(\"a\", {\n        class: \"channel-users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-user-circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 42\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 75\n        }\n      }, \" Utilisateurs\")), this.state.users.map(function (user) {\n        return /*#__PURE__*/React.createElement(\"a\", {\n          class: \"user-item\",\n          href: \"#\",\n          onClick: _this2.contactUser,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }\n        }, \"\\uD83D\\uDD35 \", user.username);\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"block-chat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        action: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"messages\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }\n      }, this.state.messages.map(function (message) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"block-msg-channel\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-hashtag\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 49\n          }\n        }), message.channel)), /*#__PURE__*/React.createElement(\"div\", {\n          class: \"block-msg-user\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: message.image,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 41\n          }\n        }), \" \", /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 75\n          }\n        }, message.author, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n          class: \"block-msg-time\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 37\n          }\n        }, message.date, \" \", /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-clock-o\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 80\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          class: \"block-msg\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 37\n          }\n        }, message.message));\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"writing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require('./writing.gif'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"block-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        list: \"cmd\",\n        class: \"form-control\",\n        id: \"m\",\n        autocomplete: \"off\",\n        placeholder: \"Votre message...\",\n        value: this.state.message,\n        onChange: function onChange(ev) {\n          return _this2.setState({\n            message: ev.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"datalist\", {\n        id: \"cmd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"/nick \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"/create \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"/join \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"/part\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"/delete \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"/msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"/list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"/users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"/clear\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.sendMessage,\n        className: \"btn btn-dark form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-paper-plane\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 102\n        }\n      })))))));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/Users/cecileumecker/Desktop/Epitech/Semestre2/StackJS/chat_irc/client/src/Chat.js"],"names":["React","io","emoji","themes","Chat","props","state","username","message","messages","writing","users","channel","join","numUsers","theme","socket","localStorage","getItem","on","setState","data","addMessage","document","getElementsByClassName","scrollTo","nb_co","addInfos","listChannel","setItem","changeChannel","addChannel","listUsers","addUsers","callback","getElementById","style","display","seeWriting","changeRoom","ev","room","target","textContent","substr","length","emit","contactUser","user","changeTheme","key","Object","keys","random_key","Math","floor","random","choice","getOwnPropertyNames","b_color","main_color","second_color","text","btn","body","transition","backgroundColor","color","i","sendMessage","preventDefault","includes","split","info","socket_id","id","user_profile","push","JSON","stringify","user_co","msg","removeItem","hasOwnProperty","input","replace","now","Date","hour","getHours","minute","getMinutes","toString","date","parse","image","author","value","map","chat","name","require","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IACMC,I;;;AACF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTC,MAAAA,KAAK,EAAE,EALE;AAMTC,MAAAA,OAAO,EAAE,EANA;AAOTC,MAAAA,IAAI,EAAE,EAPG;AAQTC,MAAAA,QAAQ,EAAE,CARD;AASTC,MAAAA,KAAK,EAAE;AATE,KAAb;AAWA,UAAKC,MAAL,GAAcf,EAAE,CAAC,wBAAD,CAAhB;AACA,UAAKK,KAAL,CAAWO,IAAX,GAAkBI,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB,CAde,CAgBf;AACA;AACA;AACA;;AACA,UAAKF,MAAL,CAAYG,EAAZ,CAAe,YAAf,EAA6B,YAAW;AACpC,WAAKC,QAAL,CAAc;AACVX,QAAAA,QAAQ,+BAAM,KAAKH,KAAL,CAAWG,QAAjB,IAA2B,MAA3B;AADE,OAAd;AAGH,KAJD,EApBe,CAyBf;;;AACA,UAAKO,MAAL,CAAYG,EAAZ,CAAe,iBAAf,EAAkC,UAASE,IAAT,EAAe;AAC7CC,MAAAA,UAAU,CAACD,IAAD,CAAV;AACAE,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,UAAhC,EAA4C,CAA5C,EAA+CC,QAA/C,CAAwD,CAAxD,EAA2D,KAA3D;AACH,KAHD,EA1Be,CA+Bf;;;AACA,UAAKT,MAAL,CAAYG,EAAZ,CAAe,eAAf,EAAgC,UAASO,KAAT,EAAgB;AAC5CC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAFD,EAhCe,CAoCf;;;AACA,UAAKV,MAAL,CAAYG,EAAZ,CAAe,cAAf,EAA+B,UAASP,OAAT,EAAkB;AAC7CgB,MAAAA,WAAW,CAAChB,OAAD,CAAX;AACH,KAFD,EArCe,CAyCf;;;AACA,UAAKI,MAAL,CAAYG,EAAZ,CAAe,gBAAf,EAAiC,UAASP,OAAT,EAAkB;AAC/CK,MAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6BjB,OAA7B;AACAkB,MAAAA,aAAa,CAAClB,OAAD,CAAb;AACH,KAHD,EA1Ce,CA+Cf;;;AACA,UAAKI,MAAL,CAAYG,EAAZ,CAAe,aAAf,EAA8B,UAASP,OAAT,EAAkB;AAC5CmB,MAAAA,UAAU,CAACnB,OAAD,CAAV;AACH,KAFD,EAhDe,CAoDf;;;AACA,UAAKI,MAAL,CAAYG,EAAZ,CAAe,YAAf,EAA6B,UAASR,KAAT,EAAgB;AACzCqB,MAAAA,SAAS,CAACrB,KAAD,CAAT;AACH,KAFD,EArDe,CAyDf;;;AACA,UAAKK,MAAL,CAAYG,EAAZ,CAAe,WAAf,EAA4B,UAASR,KAAT,EAAgB;AACxCsB,MAAAA,QAAQ,CAACtB,KAAD,CAAR;AACH,KAFD,EA1De,CAgEf;;;AACA,UAAKK,MAAL,CAAYG,EAAZ,CAAe,aAAf,EAA8B,UAASe,QAAT,EAAmB;AAC7C,UAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAClBX,QAAAA,QAAQ,CAACY,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,GAAmD,OAAnD;AACAC,QAAAA,UAAU,CAAC,sBAAD,CAAV;AACH,OAHD,MAGO,IAAIJ,QAAQ,IAAI,KAAhB,EAAuB;AAC1BX,QAAAA,QAAQ,CAACY,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,GAAmD,MAAnD;AACAC,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ,KARD,EAjEe,CA2Ef;AACA;AACA;AAEA;AACA;AACA;;AAEA;;;AACA,QAAMhB,UAAU,GAAG,SAAbA,UAAa,CAAAD,IAAI,EAAI;AACvB,YAAKD,QAAL,CAAc;AACVX,QAAAA,QAAQ,+BAAM,MAAKH,KAAL,CAAWG,QAAjB,IAA2BY,IAA3B;AADE,OAAd;AAGH,KAJD;AAMA;;;AACA,QAAMM,QAAQ,GAAG,SAAXA,QAAW,CAAAN,IAAI,EAAI;AACrB,YAAKD,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAEO;AADA,OAAd;AAGH,KAJD;AAMA;;;AACA,QAAMO,WAAW,GAAG,SAAdA,WAAc,CAAAP,IAAI,EAAI;AACxB,YAAKD,QAAL,CAAc;AACVR,QAAAA,OAAO,EAAES;AADC,OAAd;AAGH,KAJD;AAKA;;;AACA,QAAMU,UAAU,GAAG,SAAbA,UAAa,CAAAV,IAAI,EAAI;AACvB;AACA,YAAKD,QAAL,CAAc;AACVR,QAAAA,OAAO,+BAAM,MAAKN,KAAL,CAAWM,OAAjB,IAA0BS,IAA1B;AADG,OAAd;AAGH,KALD;AAOA;;;AACA,QAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAAAlB,OAAO,EAAI;AAC7B,YAAKQ,QAAL,CAAc;AACVP,QAAAA,IAAI,EAAED;AADI,OAAd;AAGH,KAJD;AAMA;;;AACA,QAAMoB,SAAS,GAAG,SAAZA,SAAY,CAAAX,IAAI,EAAI;AACtB,YAAKD,QAAL,CAAc;AACVT,QAAAA,KAAK,EAAEU;AADG,OAAd;AAGH,KAJD;AAMA;;;AACA,QAAMY,QAAQ,GAAG,SAAXA,QAAW,CAAAZ,IAAI,EAAI;AACrB,YAAKD,QAAL,CAAc;AACVT,QAAAA,KAAK,+BAAM,MAAKL,KAAL,CAAWK,KAAjB,IAAwBU,IAAxB;AADK,OAAd;AAGH,KAJD;AAMA;;;AACA,QAAMiB,UAAU,GAAG,SAAbA,UAAa,CAAAjB,IAAI,EAAI;AACvB,YAAKD,QAAL,CAAc;AACVV,QAAAA,OAAO,EAAEW;AADC,OAAd;AAGH,KAJD,CArIe,CA2If;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA,UAAKkB,UAAL,GAAkB,UAAAC,EAAE,EAAI;AACpB,UAAIC,IAAI,GAAGD,EAAE,CAACE,MAAH,CAAUC,WAArB;AACAF,MAAAA,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeH,IAAI,CAACI,MAApB,CAAP;;AACA,YAAKzB,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAE;AADA,OAAd;;AAGA,YAAKW,QAAL,CAAc;AACVP,QAAAA,IAAI,EAAE4B;AADI,OAAd;;AAGAxB,MAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6BY,IAA7B;;AACA,YAAKzB,MAAL,CAAY8B,IAAZ,CAAiB,cAAjB,EAAiCL,IAAjC;AACH,KAXD,CAnJe,CAgKf;;;AACA,UAAKM,WAAL,GAAmB,UAAAP,EAAE,EAAI;AACrB,UAAIQ,IAAI,GAAGR,EAAE,CAACE,MAAH,CAAUC,WAArB;AACAK,MAAAA,IAAI,GAAGA,IAAI,CAACJ,MAAL,CAAY,CAAZ,EAAeI,IAAI,CAACH,MAApB,CAAP;;AACA,YAAKzB,QAAL,CAAc;AACVZ,QAAAA,OAAO,+BAAM,MAAKF,KAAL,CAAWE,OAAjB,IAA0B,EAA1B;AADG,OAAd;;AAGA,YAAKY,QAAL,CAAc;AACVZ,QAAAA,OAAO,+BAAM,MAAKF,KAAL,CAAWE,OAAjB,IAA0B,UAAUwC,IAAV,GAAiB,GAA3C;AADG,OAAd;AAGH,KATD,CAjKe,CA4Kf;;;AACA,UAAKC,WAAL,GAAmB,UAAAT,EAAE,EAAI;AACrB,UAAIU,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYjD,MAAZ,CAAV;AACA,UAAIkD,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBN,GAAG,CAACL,MAAJ,GAAa,CAAb,GAAiB,CAAjB,GAAqB,CAAtC,CAAX,IAAuD,CAAxE;AACA,UAAIY,MAAM,GAAGN,MAAM,CAACO,mBAAP,CAA2BvD,MAA3B,EAAmCkD,UAAnC,CAAb;;AACA,UAAI,MAAK/C,KAAL,CAAWS,KAAX,KAAqB0C,MAAzB,EAAiC;AAC7B,cAAKR,WAAL;;AACA;AACH;;AACD,YAAK7B,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAE0C;AADG,OAAd;;AAGA,UAAIE,OAAO,GAAGxD,MAAM,CAACsD,MAAD,CAAN,CAAeE,OAA7B;AACA,UAAIC,UAAU,GAAGzD,MAAM,CAACsD,MAAD,CAAN,CAAeG,UAAhC;AACA,UAAIC,YAAY,GAAG1D,MAAM,CAACsD,MAAD,CAAN,CAAeI,YAAlC;AACA,UAAIC,IAAI,GAAG3D,MAAM,CAACsD,MAAD,CAAN,CAAeK,IAA1B;AACA,UAAIC,GAAG,GAAG5D,MAAM,CAACsD,MAAD,CAAN,CAAeM,GAAzB,CAfqB,CAgBrB;AACA;;AACAxC,MAAAA,QAAQ,CAACyC,IAAT,CAAc5B,KAAd,CAAoB6B,UAApB,GAAiC,UAAjC;AACA1C,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CY,KAA7C,CAAmD6B,UAAnD,GAAgE,QAAhE;AACA1C,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CY,KAA7C,CAAmD6B,UAAnD,GAAgE,QAAhE;AACA1C,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,EAA2C,CAA3C,EAA8CY,KAA9C,CAAoD6B,UAApD,GAAiE,QAAjE;AACA1C,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,YAAhC,EAA8C,CAA9C,EAAiDY,KAAjD,CAAuD6B,UAAvD,GAAoE,UAApE;AACA1C,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,EAA2C,CAA3C,EAA8CY,KAA9C,CAAoD6B,UAApD,GAAiE,UAAjE;AACA1C,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,UAAhC,EAA4C,CAA5C,EAA+CY,KAA/C,CAAqD6B,UAArD,GAAkE,UAAlE,CAxBqB,CA0BrB;AACA;;AACA1C,MAAAA,QAAQ,CAACyC,IAAT,CAAc5B,KAAd,CAAoB8B,eAApB,GAAsCP,OAAtC;AACApC,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CY,KAA7C,CAAmD8B,eAAnD,GAAqEN,UAArE;AACArC,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,EAA0C,CAA1C,EAA6CY,KAA7C,CAAmD8B,eAAnD,GAAqEL,YAArE;AACAtC,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,EAA2C,CAA3C,EAA8CY,KAA9C,CAAoD8B,eAApD,GAAsEN,UAAtE;AACArC,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,YAAhC,EAA8C,CAA9C,EAAiDY,KAAjD,CAAuD+B,KAAvD,GAA+DL,IAA/D;AACAvC,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,EAA2C,CAA3C,EAA8CY,KAA9C,CAAoD+B,KAApD,GAA4DL,IAA5D;AACAvC,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,UAAhC,EAA4C,CAA5C,EAA+CY,KAA/C,CAAqD8B,eAArD,GAAuEH,GAAvE;AACH,KAnCD,CA7Ke,CAiNf;AACA;AACA;AAEA;AACA;AACA;;;AACA,QAAIK,CAAC,GAAG,CAAR;;AACA,UAAKC,WAAL,GAAmB,UAAA7B,EAAE,EAAI;AACrBA,MAAAA,EAAE,CAAC8B,cAAH,GADqB,CAIzB;AACA;AACA;AAEI;AACA;;AACA,UAAI,MAAKhE,KAAL,CAAWE,OAAX,CAAmB+D,QAAnB,CAA4B,OAA5B,CAAJ,EAA0C;AACtC,YAAIvB,IAAI,GAAG,MAAK1C,KAAL,CAAWE,OAAX,CAAmBgE,KAAnB,CAAyB,GAAzB,CAAX;;AACA,YAAIC,IAAI,GAAG;AACPC,UAAAA,SAAS,EAAE,MAAK1D,MAAL,CAAY2D,EADhB;AAEPpE,UAAAA,QAAQ,EAAEyC,IAAI,CAAC,CAAD;AAFP,SAAX;AAIA,YAAI4B,YAAY,GAAG,EAAnB;AACAA,QAAAA,YAAY,CAACC,IAAb,CAAkBJ,IAAlB;AACAxD,QAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6BiD,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA7B;;AACA,cAAKrD,QAAL,CAAc;AACVZ,UAAAA,OAAO,EAAE;AADC,SAAd;;AAGA,cAAKQ,MAAL,CAAY8B,IAAZ,CAAiB,YAAjB,EAA+B;AAC3BkC,UAAAA,OAAO,EAAEhC,IAAI,CAAC,CAAD;AADc,SAA/B;;AAGA,cAAKhC,MAAL,CAAY8B,IAAZ,CAAiB,WAAjB,EAA8B;AAC1B6B,UAAAA,EAAE,EAAE,MAAK3D,MAAL,CAAY2D,EADU;AAE1BpE,UAAAA,QAAQ,EAAEyC,IAAI,CAAC,CAAD;AAFY,SAA9B;AAIH,OAnBD,CAqBA;AACA;AAtBA,WAuBK,IAAI,MAAK1C,KAAL,CAAWE,OAAX,CAAmB+D,QAAnB,CAA4B,MAA5B,CAAJ,EAAyC;AAC1C,cAAIlD,IAAI,GAAG,MAAKf,KAAL,CAAWE,OAAX,CAAmBgE,KAAnB,CAAyB,GAAzB,CAAX;;AACA,cAAIS,GAAG,GAAG,EAAV;AACA;;AACA,eAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/C,IAAI,CAACwB,MAAzB,EAAiCuB,CAAC,EAAlC,EAAsC;AAClCa,YAAAA,GAAG,IAAI5D,IAAI,CAAC+C,CAAD,CAAJ,GAAU,GAAjB;AACH;;AACD,gBAAKpD,MAAL,CAAY8B,IAAZ,CAAiB,iBAAjB,EAAoCzB,IAAI,CAAC,CAAD,CAAxC,EAA6C4D,GAA7C;AACH,SARI,CAUL;AACA;AAXK,aAYA,IAAI,MAAK3E,KAAL,CAAWE,OAAX,CAAmB+D,QAAnB,CAA4B,SAA5B,CAAJ,EAA4C;AAC7C,gBAAIlD,IAAI,GAAG,MAAKf,KAAL,CAAWE,OAAX,CAAmBgE,KAAnB,CAAyB,GAAzB,CAAX;;AACA,kBAAKxD,MAAL,CAAY8B,IAAZ,CAAiB,gBAAjB,EAAmCzB,IAAI,CAAC,CAAD,CAAvC;AACH,WAHI,CAKL;AACA;AANK,eAOA,IAAI,MAAKf,KAAL,CAAWE,OAAX,CAAmB+D,QAAnB,CAA4B,SAA5B,CAAJ,EAA4C;AAC7C,kBAAIlD,IAAI,GAAG,MAAKf,KAAL,CAAWE,OAAX,CAAmBgE,KAAnB,CAAyB,GAAzB,CAAX;;AACA,oBAAKxD,MAAL,CAAY8B,IAAZ,CAAiB,gBAAjB,EAAmCzB,IAAI,CAAC,CAAD,CAAvC;AACH,aAHI,CAKL;AACA;AANK,iBAOA,IAAI,MAAKf,KAAL,CAAWE,OAAX,CAAmB+D,QAAnB,CAA4B,OAA5B,CAAJ,EAA0C;AAC3C,oBAAIlD,IAAI,GAAG,MAAKf,KAAL,CAAWE,OAAX,CAAmBgE,KAAnB,CAAyB,GAAzB,CAAX,CAD2C,CAE3C;;;AACA,sBAAKxD,MAAL,CAAY8B,IAAZ,CAAiB,cAAjB,EAAiCzB,IAAI,CAAC,CAAD,CAArC;AACH,eAJI,CAML;AACA;AAPK,mBAQA,IAAI,MAAKf,KAAL,CAAWE,OAAX,CAAmB+D,QAAnB,CAA4B,OAA5B,CAAJ,EAA0C;AAC3CtD,kBAAAA,YAAY,CAACiE,UAAb,CAAwB,MAAxB;;AACA,wBAAK9D,QAAL,CAAc;AACVP,oBAAAA,IAAI,EAAE;AADI,mBAAd;;AAGA,wBAAKG,MAAL,CAAY8B,IAAZ,CAAiB,eAAjB;AACH,iBANI,CAQL;AACA;AATK,qBAUA,IAAI,MAAKxC,KAAL,CAAWE,OAAX,CAAmB+D,QAAnB,CAA4B,QAA5B,CAAJ,EAA2C;AAC5C,wBAAI3D,OAAO,GAAGK,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;;AACA,0BAAKF,MAAL,CAAY8B,IAAZ,CAAiB,WAAjB,EAA8BlC,OAA9B;AACH,mBAHI,CAKL;AACA;AANK,uBAOA,IAAI,MAAKN,KAAL,CAAWE,OAAX,CAAmB+D,QAAnB,CAA4B,OAA5B,CAAJ,EAA0C;AAC3C,4BAAKvD,MAAL,CAAY8B,IAAZ,CAAiB,aAAjB;AACH,qBAFI,CAIL;AACA;AALK,yBAMA,IAAI,MAAKxC,KAAL,CAAWE,OAAX,CAAmB+D,QAAnB,CAA4B,QAA5B,CAAJ,EAA2C;AAC5C,8BAAKnD,QAAL,CAAc;AACVX,0BAAAA,QAAQ,EAAE;AADA,yBAAd;AAGH,uBAJI,MAIE;AACX;AACA;AACA;AACQ,4BAAIQ,YAAY,CAACkE,cAAb,CAA4B,MAA5B,CAAJ,EAAyC;AACrC;AACA,+BAAK,IAAIC,KAAT,IAAkBlF,KAAlB,EAAyB;AACrB,kCAAKI,KAAL,CAAWE,OAAX,GAAqB,MAAKF,KAAL,CAAWE,OAAX,CAAmB6E,OAAnB,CAA2BD,KAA3B,EAAkClF,KAAK,CAACkF,KAAD,CAAvC,CAArB;AACH;AACD;;;AACA,8BAAIE,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,8BAAIC,IAAI,GAAGF,GAAG,CAACG,QAAJ,EAAX;AACA,8BAAIC,MAAM,GAAGJ,GAAG,CAACK,UAAJ,EAAb;;AACA,8BAAIH,IAAI,CAACI,QAAL,GAAgB/C,MAAhB,IAA0B,CAA9B,EAAiC;AAC7B2C,4BAAAA,IAAI,GAAG,MAAMA,IAAb;AACH;;AACD,8BAAIE,MAAM,CAACE,QAAP,GAAkB/C,MAAlB,IAA4B,CAAhC,EAAmC;AAC/B6C,4BAAAA,MAAM,GAAG,MAAMA,MAAf;AACH;;AACD,8BAAIG,IAAI,GAAGL,IAAI,GAAG,GAAP,GAAaE,MAAxB;AACA,8BAAIhB,SAAS,GAAGI,IAAI,CAACgB,KAAL,CAAW7E,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyC,WAAzC,CAAhB;AACA,8BAAIX,QAAQ,GAAGuE,IAAI,CAACgB,KAAL,CAAW7E,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyC,UAAzC,CAAf,CAjBqC,CAoBrC;AACA;;AACA,8BAAID,YAAY,CAACkE,cAAb,CAA4B,MAA5B,CAAJ,EAAyC;AACrC,gCAAIvE,OAAO,GAAGK,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;;AACA,kCAAKF,MAAL,CAAY8B,IAAZ,CAAiB,sBAAjB,EAAyC;AACrC4B,8BAAAA,SAAS,EAAEA,SAD0B;AAErC9D,8BAAAA,OAAO,EAAEA,OAF4B;AAGrCmF,8BAAAA,KAAK,EAAE,cAH8B;AAIrCC,8BAAAA,MAAM,EAAEzF,QAJ6B;AAKrCC,8BAAAA,OAAO,EAAE,MAAKF,KAAL,CAAWE,OALiB;AAMrCqF,8BAAAA,IAAI,EAAEA;AAN+B,6BAAzC,EAOGjF,OAPH;AAQH,2BAVD,MAUO;AACP;AACA;AACI,kCAAKI,MAAL,CAAY8B,IAAZ,CAAiB,cAAjB,EAAiC;AAC7B4B,8BAAAA,SAAS,EAAEA,SADkB;AAE7B9D,8BAAAA,OAAO,EAAE,SAFoB;AAG7BmF,8BAAAA,KAAK,EAAE,cAHsB;AAI7BC,8BAAAA,MAAM,EAAEzF,QAJqB;AAK7BC,8BAAAA,OAAO,EAAE,MAAKF,KAAL,CAAWE,OALS;AAM7BqF,8BAAAA,IAAI,EAAEA;AANuB,6BAAjC;AAQH;AACJ;AACJ;;AACD,YAAKzE,QAAL,CAAc;AACVZ,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAnJD,CAzNe,CA8Wf;AACA;AACA;;;AAhXe;AAkXlB;AACD;;;;;yCACqB;AACjBS,MAAAA,YAAY,CAACiE,UAAb,CAAwB,MAAxB;AACAjE,MAAAA,YAAY,CAACiE,UAAb,CAAwB,OAAxB;AACH;;;wCACmB;AAChB,WAAKjC,WAAL;AACH;;;yCACoB;AACjB;AACA,UAAI1B,QAAQ,CAACY,cAAT,CAAwB,GAAxB,EAA6B8D,KAA7B,CAAmCpD,MAAnC,GAA4C,CAAhD,EAAmD;AAC/CtB,QAAAA,QAAQ,CAACY,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,GAAmD,OAAnD;AACH,OAFD,MAEO;AACHd,QAAAA,QAAQ,CAACY,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,GAAmD,MAAnD;AACH;AACJ;;;6BACG;AAAA;;AACJ,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,KAAK,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM,KAAK/B,KAAL,CAAWO,IAAjB,CADA,CADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAG,QAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,OAAgC,KAAKP,KAAL,CAAWQ,QAA3C,CAHJ,CADJ,eAMI;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0B;AAAG,QAAA,KAAK,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA1B,CADJ,eAEI;AAAK,QAAA,KAAK,EAAC,YAAX;AAAwB,QAAA,GAAG,EAAC,wFAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI;AAAG,QAAA,KAAK,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAQ;AAAG,QAAA,KAAK,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR,eAAzB,CAHJ,EAIK,KAAKR,KAAL,CAAWM,OAAX,CAAmBsF,GAAnB,CAAuB,UAAAC,IAAI,EAAI;AAC5B,4BACI;AAAG,UAAA,KAAK,EAAC,wBAAT;AAAmC,UAAA,IAAI,EAAC,GAAxC;AAA4C,UAAA,OAAO,EAAE,MAAI,CAAC5D,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsE;AAAG,UAAA,KAAK,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtE,EAAoG4D,IAAI,CAACC,IAAzG,CADJ;AAGH,OAJA,CAJL,eASI;AAAG,QAAA,KAAK,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAyB;AAAG,QAAA,KAAK,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,eAA0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA1D,CATJ,EAUK,KAAK9F,KAAL,CAAWK,KAAX,CAAiBuF,GAAjB,CAAqB,UAAAlD,IAAI,EAAI;AAC1B,4BACI;AAAG,UAAA,KAAK,EAAC,WAAT;AAAsB,UAAA,IAAI,EAAC,GAA3B;AAA+B,UAAA,OAAO,EAAE,MAAI,CAACD,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA8DC,IAAI,CAACzC,QAAnE,CADJ;AAGH,OAJA,CAVL,CANJ,eAsBI;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKD,KAAL,CAAWG,QAAX,CAAoByF,GAApB,CAAwB,UAAA1F,OAAO,EAAI;AAChC,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAQ;AAAG,UAAA,KAAK,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR,EAAsCA,OAAO,CAACI,OAA9C,CADJ,CADJ,eAII;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAG,UAAA,SAAS,EAAEJ,OAAO,CAACuF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,oBACsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASvF,OAAO,CAACwF,MAAjB,MADtC,eAEA;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BxF,OAAO,CAACqF,IAArC,oBAA2C;AAAG,UAAA,KAAK,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA3C,CAFA,CAJJ,eAQI;AAAK,UAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKrF,OAAO,CAACA,OADb,CARJ,CADJ;AAcH,OAfA,CADD,eAiBA;AAAG,QAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB;AAAK,QAAA,GAAG,EAAE6F,OAAO,CAAC,eAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAjBA,CADJ,eAoBI;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,KAAK,EAAC,cAAxB;AAAwC,QAAA,EAAE,EAAC,GAA3C;AAA+C,QAAA,YAAY,EAAC,KAA5D;AAAkE,QAAA,WAAW,EAAC,kBAA9E;AAAiG,QAAA,KAAK,EAAE,KAAK/F,KAAL,CAAWE,OAAnH;AAA4H,QAAA,QAAQ,EAAE,kBAAAgC,EAAE;AAAA,iBAAI,MAAI,CAACpB,QAAL,CAAc;AAACZ,YAAAA,OAAO,EAAEgC,EAAE,CAACE,MAAH,CAAUuD;AAApB,WAAd,CAAJ;AAAA,SAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEY;AAAU,QAAA,EAAE,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,eAGA;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,eAIA;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,eAKA;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,eAMA;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,eAOA;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,eAQA;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,eASA;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,CAFZ,eAaI;AAAQ,QAAA,OAAO,EAAE,KAAK5B,WAAtB;AAAmC,QAAA,SAAS,EAAC,2BAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAyE;AAAG,QAAA,KAAK,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzE,CAbJ,CApBJ,CADJ,CADJ,CAtBJ,CADJ;AAiEH;;;;EAtckBrE,KAAK,CAACsG,S;;AAwczB,eAAelG,IAAf","sourcesContent":["import React from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport emoji from \"./emoji\"\r\nimport themes from \"./themes\"\r\nclass Chat extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            message: '',\r\n            messages: [],\r\n            writing: '',\r\n            users: [],\r\n            channel: [],\r\n            join: '',\r\n            numUsers: 0,\r\n            theme: '',\r\n        };\r\n        this.socket = io('http://localhost:4001/')\r\n        this.state.join = localStorage.getItem('join');\r\n\r\n        ///////////////////////////////////////////////////\r\n        // I) EVENEMENT SOCKET.IO\r\n        //////////////////////////////////////////////////\r\n        //CONNEXION\r\n        this.socket.on('connection', function() {\r\n            this.setState({\r\n                messages: [...this.state.messages, 'data']\r\n            });\r\n        });\r\n        //RECEPTION MSG\r\n        this.socket.on('RECEIVE_MESSAGE', function(data) {\r\n            addMessage(data);\r\n            document.getElementsByClassName('messages')[0].scrollTo(0, 99999);\r\n        });\r\n\r\n        //NOMBRE UTILISATEUR CONNECTES\r\n        this.socket.on('INFOS_CHANNEL', function(nb_co) {\r\n            addInfos(nb_co)\r\n        });\r\n\r\n        //LISTE CHANNEL\r\n        this.socket.on('LIST_CHANNEL', function(channel) {\r\n            listChannel(channel)\r\n        })\r\n\r\n        //CHANGE CHANNEL\r\n        this.socket.on('CHANGE_CHANNEL', function(channel) {\r\n            localStorage.setItem('join', channel);\r\n            changeChannel(channel)\r\n        })\r\n\r\n        //AJOUT DE CHANNEL\r\n        this.socket.on('ADD_CHANNEL', function(channel) {\r\n            addChannel(channel)\r\n        });\r\n\r\n        //LISTE USERS\r\n        this.socket.on('LIST_USERS', function(users) {\r\n            listUsers(users)\r\n        });\r\n\r\n        //AJOUT USERS\r\n        this.socket.on('ADD_USERS', function(users) {\r\n            addUsers(users)\r\n        });\r\n\r\n\r\n\r\n        //PENDANT ECRITE\r\n        this.socket.on('SEE_WRITING', function(callback) {\r\n            if (callback == true) {\r\n                document.getElementById('writing').style.display = \"block\";\r\n                seeWriting(\"Quelqu'un écrit la!!\")\r\n            } else if (callback == false) {\r\n                document.getElementById('writing').style.display = \"none\";\r\n                seeWriting(\"\")\r\n            }\r\n        });\r\n\r\n        ///////////////////////////////////////////////////\r\n        //[FIN] EVENEMENT SOCKET.IO\r\n        //////////////////////////////////////////////////\r\n\r\n        ///////////////////////////////////////////////////\r\n        // II) FONCTIONS CRUD\r\n        //////////////////////////////////////////////////\r\n\r\n        /*AJOUT MSG*/\r\n        const addMessage = data => {\r\n            this.setState({\r\n                messages: [...this.state.messages, data]\r\n            });\r\n        }\r\n\r\n        /*AFFICHE NOMBRE UTILISATEUR CONNECTES AU CHANNEL*/\r\n        const addInfos = data => {\r\n            this.setState({\r\n                numUsers: data\r\n            });\r\n        };\r\n\r\n        /*LISTE CHANNEL*/\r\n        const listChannel = data => {\r\n            this.setState({\r\n                channel: data\r\n            });\r\n        };\r\n        /*AJOUT CHANNEL*/\r\n        const addChannel = data => {\r\n            //this.setState({channel: data});\r\n            this.setState({\r\n                channel: [...this.state.channel, data]\r\n            });\r\n        };\r\n\r\n        /*CHANGER CHANNEL*/\r\n        const changeChannel = channel => {\r\n            this.setState({\r\n                join: channel\r\n            });\r\n        }\r\n\r\n        /*LISTE USERS*/\r\n        const listUsers = data => {\r\n            this.setState({\r\n                users: data\r\n            });\r\n        };\r\n\r\n        /*AJOUT USER*/\r\n        const addUsers = data => {\r\n            this.setState({\r\n                users: [...this.state.users, data]\r\n            });\r\n        };\r\n\r\n        /*Voir quelqu'un écrire*/\r\n        const seeWriting = data => {\r\n            this.setState({\r\n                writing: data\r\n            });\r\n        };\r\n\r\n        ///////////////////////////////////////////////////\r\n        //[FIN] FONCTIONS CRUD\r\n        //////////////////////////////////////////////////\r\n\r\n        ///////////////////////////////////////////////////\r\n        // III) EVENEMENT AU CLICK\r\n        //////////////////////////////////////////////////\r\n        // a) CHANGER DE CHANNEL (au click)\r\n        this.changeRoom = ev => {\r\n            var room = ev.target.textContent;\r\n            room = room.substr(0, room.length);\r\n            this.setState({\r\n                messages: []\r\n            });\r\n            this.setState({\r\n                join: room\r\n            });\r\n            localStorage.setItem('join', room);\r\n            this.socket.emit('JOIN_CHANNEL', room)\r\n        }\r\n\r\n        // b) CONTACTER UN UTILISATEUR (au click)\r\n        this.contactUser = ev => {\r\n            var user = ev.target.textContent;\r\n            user = user.substr(3, user.length);\r\n            this.setState({\r\n                message: [...this.state.message, '']\r\n            });\r\n            this.setState({\r\n                message: [...this.state.message, '/msg ' + user + ' ']\r\n            });\r\n        }\r\n\r\n        // c) CHANGER DE THEME (au click)\r\n        this.changeTheme = ev => {\r\n            var key = Object.keys(themes);\r\n            var random_key = Math.floor(Math.random() * (key.length - 1 - 0 + 1)) + 0;\r\n            var choice = Object.getOwnPropertyNames(themes)[random_key];\r\n            if (this.state.theme === choice) {\r\n                this.changeTheme();\r\n                return;\r\n            }\r\n            this.setState({\r\n                theme: choice\r\n            });\r\n            var b_color = themes[choice].b_color;\r\n            var main_color = themes[choice].main_color;\r\n            var second_color = themes[choice].second_color;\r\n            var text = themes[choice].text;\r\n            var btn = themes[choice].btn;\r\n            // 1) ANIMATION\r\n            /////////////////////////////\r\n            document.body.style.transition = \"all 0.6s\";  \r\n            document.getElementsByClassName(\"topnav\")[0].style.transition = \"all 2s\";    \r\n            document.getElementsByClassName('active')[0].style.transition = \"all 2s\"; \r\n            document.getElementsByClassName('sidenav')[0].style.transition = \"all 2s\"; \r\n            document.getElementsByClassName('main-title')[0].style.transition = \"all 1.7s\"; \r\n            document.getElementsByClassName('sidenav')[0].style.transition = \"all 1.8s\"; \r\n            document.getElementsByClassName('btn-dark')[0].style.transition = \"all 1.6s\"; \r\n\r\n            // 2) CHANGEMENT DE COULEURS\r\n            /////////////////////////////\r\n            document.body.style.backgroundColor = b_color;\r\n            document.getElementsByClassName('topnav')[0].style.backgroundColor = main_color;\r\n            document.getElementsByClassName('active')[0].style.backgroundColor = second_color;\r\n            document.getElementsByClassName('sidenav')[0].style.backgroundColor = main_color;\r\n            document.getElementsByClassName('main-title')[0].style.color = text;\r\n            document.getElementsByClassName('sidenav')[0].style.color = text;\r\n            document.getElementsByClassName('btn-dark')[0].style.backgroundColor = btn;\r\n        }\r\n        ///////////////////////////////////////////////////\r\n        //{FIN] EVENEMENT AU CLICK\r\n        //////////////////////////////////////////////////\r\n\r\n        ///////////////////////////////////////////////////\r\n        // IV) COMMANDES && ENVOI DE MESSAGE\r\n        //////////////////////////////////////////////////\r\n        var i = 0;\r\n        this.sendMessage = ev => {\r\n            ev.preventDefault();\r\n\r\n\r\n        ///////////////////////////////////////////////////\r\n        // a) COMMANDES\r\n        ////////////////////////////////////////////////// \r\n\r\n            // 1) CONNEXION\r\n            //////////////////////////////\r\n            if (this.state.message.includes('/nick')) {\r\n                var user = this.state.message.split(' ');\r\n                var info = {\r\n                    socket_id: this.socket.id,\r\n                    username: user[1]\r\n                };\r\n                var user_profile = []\r\n                user_profile.push(info)\r\n                localStorage.setItem('user', JSON.stringify(info));\r\n                this.setState({\r\n                    message: ''\r\n                });\r\n                this.socket.emit('CHECK_CONN', {\r\n                    user_co: user[1]\r\n                })\r\n                this.socket.emit('ADD_USERS', {\r\n                    id: this.socket.id,\r\n                    username: user[1]\r\n                })\r\n            }\r\n\r\n            // 2) ENVOYER UN MSG PRIVE\r\n            //////////////////////////////\r\n            else if (this.state.message.includes('/msg')) {\r\n                var data = this.state.message.split(' ');\r\n                var msg = '';\r\n                /*Reconstruction string à partir du 2eme argument*/\r\n                for (var i = 2; i < data.length; i++) {\r\n                    msg += data[i] + ' ';\r\n                }\r\n                this.socket.emit('PRIVATE_MESSAGE', data[1], msg)\r\n            }\r\n\r\n            // 3) CREER UN CHANNEL\r\n            //////////////////////////////\r\n            else if (this.state.message.includes('/create')) {\r\n                var data = this.state.message.split(' ');\r\n                this.socket.emit('CREATE_CHANNEL', data[1])\r\n            }\r\n\r\n            // 4) SUPPRIMER UN CHANNEL\r\n            //////////////////////////////\r\n            else if (this.state.message.includes('/delete')) {\r\n                var data = this.state.message.split(' ');\r\n                this.socket.emit('DELETE_CHANNEL', data[1])\r\n            }\r\n\r\n            // 5) REJOINDRE UN CHANNEL\r\n            //////////////////////////////\r\n            else if (this.state.message.includes('/join')) {\r\n                var data = this.state.message.split(' ');\r\n                //this.socket.emit('JOIN_CHANNEL', data[1])\r\n                this.socket.emit('JOIN_CHANNEL', data[1])\r\n            }\r\n\r\n            // 6) QUITTER UN CHANNEL\r\n            //////////////////////////////\r\n            else if (this.state.message.includes('/part')) {\r\n                localStorage.removeItem('join');\r\n                this.setState({\r\n                    join: ''\r\n                });\r\n                this.socket.emit('LEAVE_CHANNEL')\r\n            }\r\n\r\n            // 7) LISTER DES UTILISATEURS\r\n            //////////////////////////////\r\n            else if (this.state.message.includes('/users')) {\r\n                var channel = localStorage.getItem('join')\r\n                this.socket.emit('GET_USERS', channel)\r\n            }\r\n\r\n            // 8) LISTER CHANNELS\r\n            //////////////////////////////\r\n            else if (this.state.message.includes('/list')) {\r\n                this.socket.emit('GET_CHANNEL')\r\n            }\r\n\r\n            // 9) CLEAR LE CHAT\r\n            //////////////////////////////\r\n            else if (this.state.message.includes('/clear')) {\r\n                this.setState({\r\n                    messages: []\r\n                });\r\n            } else {\r\n        ///////////////////////////////////////////////////\r\n        // b) ENVOI DE MESSAGES\r\n        ////////////////////////////////////////////////// \r\n                if (localStorage.hasOwnProperty('user')) {\r\n                    /*On vérifie la présence d'émoji*/\r\n                    for (var input in emoji) {\r\n                        this.state.message = this.state.message.replace(input, emoji[input])\r\n                    }\r\n                    /*On récupere la date actuel*/\r\n                    var now = new Date();\r\n                    var hour = now.getHours();\r\n                    var minute = now.getMinutes();\r\n                    if (hour.toString().length == 1) {\r\n                        hour = '0' + hour;\r\n                    }\r\n                    if (minute.toString().length == 1) {\r\n                        minute = '0' + minute;\r\n                    }\r\n                    var date = hour + 'h' + minute;\r\n                    var socket_id = JSON.parse(localStorage.getItem('user'))['socket_id']\r\n                    var username = JSON.parse(localStorage.getItem('user'))['username']\r\n\r\n\r\n                    // 1) ENVOI A UN CHANNEL SPECIFIQUE\r\n                    //////////////////////////////////////////\r\n                    if (localStorage.hasOwnProperty('join')) {\r\n                        var channel = localStorage.getItem('join')\r\n                        this.socket.emit('SEND_CHANNEL_MESSAGE', {\r\n                            socket_id: socket_id,\r\n                            channel: channel,\r\n                            image: 'fa fa-user-o',\r\n                            author: username,\r\n                            message: this.state.message,\r\n                            date: date,\r\n                        }, channel)\r\n                    } else {\r\n                    // 2) ENVOI TOUS UTILISATEURS \r\n                    //////////////////////////////////////////\r\n                        this.socket.emit('SEND_MESSAGE', {\r\n                            socket_id: socket_id,\r\n                            channel: \"GENERAL\",\r\n                            image: 'fa fa-user-o',\r\n                            author: username,\r\n                            message: this.state.message,\r\n                            date: date,\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            this.setState({\r\n                message: ''\r\n            });\r\n        }\r\n\r\n        ///////////////////////////////////////////////////\r\n        //[FIN] COMMANDES && ENVOI DE MESSAGE\r\n        //////////////////////////////////////////////////\r\n\r\n    }\r\n    /*RESET*/\r\n    componentWillMount() {\r\n        localStorage.removeItem('join');\r\n        localStorage.removeItem('users');\r\n    }\r\n    componentDidMount() {\r\n        this.changeTheme();\r\n    }\r\n    componentDidUpdate() {\r\n        /*ICONE QUI APPARAIT PENDANT L'ECRITURE*/\r\n        if (document.getElementById('m').value.length > 2) {\r\n            document.getElementById('writing').style.display = \"block\";\r\n        } else {\r\n            document.getElementById('writing').style.display = \"none\";\r\n        }\r\n    }\r\nrender(){\r\n    return (\r\n        <div>\r\n            <div class=\"topnav\">\r\n                <p class=\"active\">\r\n                <h3>#{this.state.join}</h3></p>\r\n                <a><i class=\"fa fa-users\"></i> {this.state.numUsers}</a>\r\n            </div>\r\n            <div class=\"sidenav\">\r\n                <strong class=\"big-title\"><a class=\"main-title\">My IRC</a></strong>\r\n                <img class=\"icon-title\" src=\"https://cdn1.iconfinder.com/data/icons/communication-social-media-set-3/512/15-512.png\" />\r\n                <a class=\"channel-title\"><strong><i class=\"fa fa-hashtag\"></i>Chaînes</strong></a>\r\n                {this.state.channel.map(chat => {\r\n                    return (\r\n                        <a class=\"btn btn-outline-danger\"  href=\"#\" onClick={this.changeRoom}><i class=\"fa fa-hashtag\"></i>{chat.name}</a>\r\n                        )\r\n                })}\r\n                <a class=\"channel-users\"><i class=\"fa fa-user-circle\"></i><strong> Utilisateurs</strong></a>\r\n                {this.state.users.map(user => {\r\n                    return (\r\n                        <a class=\"user-item\"  href=\"#\" onClick={this.contactUser}>🔵 {user.username}</a>\r\n                        )\r\n                })}\r\n            </div>\r\n            <div class=\"block-chat\">\r\n                <div className=\"main\">\r\n                    <form action=\"\">\r\n                        <ul className=\"messages\">\r\n                        {this.state.messages.map(message => {\r\n                            return (\r\n                                <li>\r\n                                    <div class=\"block-msg-channel\"> \r\n                                        <strong><i class=\"fa fa-hashtag\"></i>{message.channel}</strong>\r\n                                    </div>\r\n                                    <div class=\"block-msg-user\"> \r\n                                        <i className={message.image}></i> <strong>{message.author} </strong>\r\n                                    <div class=\"block-msg-time\">{message.date} <i class=\"fa fa-clock-o\"></i></div> \r\n                                </div>\r\n                                    <div class=\"block-msg\">\r\n                                        {message.message}\r\n                                    </div>\r\n                                </li>\r\n                                )\r\n                        })}\r\n                        <p id=\"writing\"><img src={require('./writing.gif')} /></p>\r\n                        </ul>\r\n                        <div class=\"block-input\">\r\n                            <input list=\"cmd\" class=\"form-control\"  id=\"m\" autocomplete=\"off\" placeholder=\"Votre message...\" value={this.state.message} onChange={ev => this.setState({message: ev.target.value})}/>\r\n                                    <datalist id=\"cmd\">\r\n                                    <option value=\"/nick \" />\r\n                                    <option value=\"/create \" />\r\n                                    <option value=\"/join \" />\r\n                                    <option value=\"/part\" />\r\n                                    <option value=\"/delete \" />\r\n                                    <option value=\"/msg\" />\r\n                                    <option value=\"/list\" />\r\n                                    <option value=\"/users\" />\r\n                                    <option value=\"/clear\" />\r\n                                </datalist>\r\n                            <button onClick={this.sendMessage} className=\"btn btn-dark form-control\"><i class=\"fa fa-paper-plane\"></i></button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n}\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}